{
  "entities": {
    "UserProfile": {
      "title": "User Profile",
      "description": "Represents a user's public and private profile information.",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        },
        "photoURL": {
          "type": "string",
          "format": "uri",
          "description": "URL of the user's profile picture."
        },
        "tokenBalance": {
          "type": "number",
          "description": "The user's current token balance."
        },
        "role": {
          "type": "string",
          "description": "The user's role, e.g., 'user' or 'admin'.",
          "enum": ["user", "admin"]
        }
      },
      "required": ["email", "role"]
    },
    "TokenPackage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TokenPackage",
      "type": "object",
      "description": "Represents a token package available for purchase.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the token package."
        },
        "name": {
          "type": "string",
          "description": "Name of the token package (e.g., 'Basic', 'Premium')."
        },
        "description": {
          "type": "string",
          "description": "Description of the token package."
        },
        "priceGBP": {
          "type": "number",
          "description": "Price of the token package in GBP."
        },
        "tokens": {
          "type": "number",
          "description": "Number of tokens included in the package."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "priceGBP",
        "tokens"
      ]
    },
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents a transaction for purchasing tokens or using services.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the transaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Transaction)"
        },
        "date": {
          "type": "string",
          "description": "Date and time of the transaction.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the transaction in GBP/EUR."
        },
        "currency": {
            "type": "string",
            "description": "Currency of the transaction."
        },
        "tokens": {
          "type": "number",
          "description": "Number of tokens involved in the transaction (positive for purchase, negative for usage)."
        },
        "details": {
          "type": "string",
          "description": "Description of the transaction (e.g., 'Purchased Basic Token Package', 'AI Meal Plan Generation')."
        },
        "type": {
          "type": "string",
          "description": "Type of the transaction (e.g., 'Purchase', 'Usage')."
        }
      },
      "required": [
        "id",
        "userId",
        "date",
        "amount",
        "currency",
        "tokens",
        "details",
        "type"
      ]
    },
    "MealPlan": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MealPlan",
      "type": "object",
      "description": "Represents a meal plan generated by AI or a personal chef.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the meal plan."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N MealPlan)"
        },
        "creationDate": {
          "type": "string",
          "description": "Date and time the meal plan was created.",
          "format": "date-time"
        },
        "completionDate": {
            "type": "string",
            "description": "Date and time the meal plan was completed by the chef.",
            "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "Type of meal plan (e.g., 'AI Generated', 'Personal Chef')."
        },
        "status": {
            "type": "string",
            "description": "Status for chef plans (e.g. 'pending', 'completed').",
            "enum": ["pending", "completed"]
        },
        "cost": {
          "type": "number",
          "description": "The cost in tokens for the meal plan."
        },
        "details": {
          "type": "string",
          "description": "Summary of the meal plan request."
        },
        "content": {
          "type": "string",
          "description": "The actual meal plan data (e.g., JSON or text format)."
        }
      },
      "required": [
        "id",
        "userId",
        "creationDate",
        "type",
        "content",
        "cost",
        "details"
      ]
    },
    "Policy": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Policy",
      "type": "object",
      "description": "Represents a policy document (e.g., Terms and Conditions, Privacy Policy).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the policy."
        },
        "title": {
          "type": "string",
          "description": "Title of the policy (e.g., 'Terms and Conditions')."
        },
        "content": {
          "type": "string",
          "description": "The actual content of the policy document."
        },
        "policyType": {
          "type": "string",
          "description": "Type of policy (e.g., 'Terms and Conditions', 'Privacy Policy', 'Return Policy', 'Cooking Policy')"
        },
        "lastUpdated": {
          "type": "string",
          "description": "Date the policy was last updated",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "title",
        "content",
        "policyType",
        "lastUpdated"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ]
  },
  "firestore": {
      "rules": "firestore.rules",
      "collections": {
        "users": {
          "schema": { "$ref": "#/entities/UserProfile" },
          "description": "Stores user profiles. Only the authenticated user can access their own profile."
        },
        "transactions": {
            "schema": { "$ref": "#/entities/Transaction" },
            "description": "Stores transaction history for all users."
        },
        "mealPlans": {
            "schema": { "$ref": "#/entities/MealPlan" },
            "description": "Stores meal plans for all users."
        }
      }
    }
}
